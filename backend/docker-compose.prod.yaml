version: '3.8'

services:

  nginx-proxy:
    container_name: nginx-proxy
    build: ./compose/production/nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
      - "8000:8000"
      - "5555:5555"
      - "15672:15672"
    volumes:
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
      - web
      - flower

  nginx-proxy-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    env_file:
      - .env/.env.prod.proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - acme:/etc/acme.sh
    depends_on:
      - nginx-proxy

  react-app:
    build:
      context: .
      dockerfile: ./compose/production/react/Dockerfile
      args:
        - REACT_APP_NAME1=EvgeniyOm-prod
    depends_on:
      - web

  web:
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    command: /start
    env_file:
      - ./.env/.prod
    depends_on:
      - redis
      - db

  db:
    image: postgres:12.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=hello_django_dev
      - POSTGRES_USER=hello_django
      - POSTGRES_PASSWORD=hello_django

  redis:
    image: redis:5-alpine

  rabbitmq:
    image: rabbitmq:3-management
    env_file:
      - ./.env/.prod

  celery_worker:
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: django_celery_worker
    command: /start-celeryworker
    env_file:
      - ./.env/.prod
    depends_on:
      - redis
      - db

  celery_beat:
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: django_celery_beat
    command: /start-celerybeat
    env_file:
      - ./.env/.prod
    depends_on:
      - redis
      - db

  flower:
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: django_celery_flower
    command: /start-flower
    env_file:
      - ./.env/.prod
    depends_on:
      - redis
      - db

volumes:
  postgres_data:
  certs:
  html:
  vhost:
  acme:
